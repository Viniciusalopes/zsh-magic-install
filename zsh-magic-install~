#!/usr/bin/env bash
#
# Template orgulhosamente criado por (Shell-Base)
#
#-----------HEADER-------------------------------------------------------------|
# AUTOR....: Vovolinux <suporte@vovolinux.com.br>
# DATA.....: 31/07/2019 às 02:59 
# PROGRAMA.: zsh-magic-install
# VERSÃO...: 1.0.1
# LICENÇA..: MIT
# HOMEPAGE.: https://github.com/Viniciusalopes/zsh-magic-install
# DESCRIÇÃO: Instalação automáGica do zsh, powerline-fonts e oh-my-zsh com tema
#              Agnoster configurado.
#
#------------------------------------------------------------------------------|


#--------CHANGELOG------------------------------------------------------------->
# 2019-08-17 [v1.0.1] - Exibe o nome do usuário antes da instalação
#                     - Corrigida a exibição da linha de separação
#                     - Testado com Xubuntu 18.04.3 LTS
#------------------------------------------------------------------------------|


#--------VÁRIAVEIS------------------------------------------------------------->

# Identifica a Distro
release='os-release'
linha='PRETTY'

if ! [[ -e /etc/os-release ]]; then
    release='lsb-release'
    linha='CODENAME'
fi    

distro=$(cat /etc/"${release}" | grep "${linha}" | cut -d"\"" -f2)

# Distros testadas
distros=(
    'Ubuntu 18.04.3 LTS' 
    'Ubuntu 19.04'
    'Ubuntu 19.10' 
    'KDE neon User Edition 5.16' 
    'Debian GNU/Linux 9 (stretch)' 
    'Linux Mint 19.1' 
    'Linux Mint 19.2' 
    'Fedora 30 (Thirty)' 
    'Manjaro Linux' 
    'Slackware 14.2'
    'Mazon OS'
    )

# Flag para continuar o script
continua=0

# Dependência necessária
programa=''

# Nome do usuário
usuario=$(whoami)

# Arquivo .zshrc
arquivo_zshrc="/${usuario}/.zshrc"

# Linha para separa cada etapa da instalação na saída padrão
separa='------------------------------------------------------------------------------'

# Mensagens"
msg_atencao='\n*******************************************************************************
***************************     A T E N Ç Ã O !     ***************************
*******************************************************************************\n'
msg_inicius=' Opa! Belesma?
 Este script vai instalar o zsh e o configurador oh-my-zsh, mudar o terminal 
 padrão para zsh e setar o tema Agnoster para o usuário que estiver executando
 o script, neste caso, para o usuario ${usuario} .

 A instalação depende de alguns programas como wget e git, que serão
 instalados caso ainda não estejam no seu sistema.'

msg_parar=' OK.\n Seu sistema não foi alterado.'

msg_continuar=' Deseja continuar? [s/N]: '

msg_final="${separa}
 Opa! Acho que correu tudo bem!
 Reinicie a sessão para ver seu novo terminal!
  
 Até breve!
 -----------------------------------
 Vovolinux: Sem trauma e sem teoria!
 -----------------------------------
"

#------------------------------------------------------------------------------>


#--------FUNÇÕES--------------------------------------------------------------->


# Pergunta inicial
pergunta()
{
    echo -e "${msg_atencao}${msg_inicius}"
    read -ep "${msg_continuar}" -n 1

    case "$REPLY" in
        s|S) executa ;;
        *) echo -e "${msg_parar}"  ;;
    esac
    exit 0 
}

# Verifica se o programa está instalado
ver_dependencia()
{
    which ${programa}
    if [[ $? -eq 0 ]]; then
        echo -e "${programa} está instalado."
    else
        echo -e "${programa} não está instalado."
        instala
    fi
}

# Define o gerenciador de pacotes da distro e instala o(s) pacote(s)
instala()
{
    echo -e"${separa}\n"
    if [[ "${distro}" == 'Ubuntu 18.04.3 LTS' ]] \
    || [[ "${distro}" == 'Ubuntu 19.04' ]] \
    || [[ "${distro}" == 'Ubuntu 19.10' ]] \
    || [[ "${distro}" == 'KDE neon User Edition 5.16' ]] \
    || [[ "${distro}" == 'Debian GNU/Linux 9 (stretch)' ]] \
    || [[ "${distro}" == 'Linux Mint 19.2' ]] \
    || [[ "${distro}" == 'Linux Mint 19.1' ]]; then
        sudo apt install -y ${programa}
    fi

    if [[ "${distro}" == 'Fedora 30 (Thirty)' ]]; then
        [[ "${programa}" == 'fonts-powerline' ]] && { programa='powerline-fonts'; }
        sudo dnf install -y ${programa} 
    fi

    if [[ "${distro}" == 'Manjaro Linux' ]]; then
        [[ "${programa}" == 'fonts-powerline' ]] && { programa='powerline-fonts'; }
        sudo pacman -S --noconfirm ${programa} 
    fi

    if [[ "${distro}" == 'Slackware 14.2' ]] || [[ "${distro}" == 'Mazon OS' ]]; then
        if [[ "${programa}" == 'fonts-powerline' ]]; then
            echo -e "${separa}\n"
            # Instala as fontes para distros que não possuem pacotes prontos
            # clone
            git clone https://github.com/powerline/fonts.git --depth=1
            # install
            cd fonts
            ./install.sh
            # clean-up a bit
            cd ..
            rm -rf fonts
        fi
    fi

    if [[ "${distro}" == 'Mazon OS' ]] && [[ "${programa}" == 'zsh' ]]; then
        echo -e "${separa}\n"
        wget -O /tmp/zsh-5.7.1-1.mz \
        https://vovolinux.com.br/vovomazon/packages/var/lib/mzphp/unreleased/base/zsh-5.7.1-1.mz \
        --no-check-certificate

        sudo banana -i /tmp/zsh-5.7.1-1.mz
    fi
}


# Execução do script
executa()
{
    echo -e "${separa}\nVerificando e instalando programas e fontes..."
    programa='wget'
    ver_dependencia
    programa='git'
    ver_dependencia
    programa='zsh'
    instala
    programa='fonts-powerline'
    instala
    
    # Altera o shell de bash para zsh
    echo -e "${separa}\n"
    chsh -s /bin/zsh
    
    echo -e "${separa}\nObtendo o oh-my-zsh..."
    wget -O install.sh https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh
    sed -i s'/exec zsh -l/#####/'g install.sh
    echo -e "${separa}\n"
    sh install.sh
    rm -rfv install.sh

    echo -e "${separa}\nFazendo backup do /etc/passwd..."
    sudo cp -v /etc/passwd /etc/passwd-bkp

    echo -e "${separa}\nObtendo usuários do sistema..."
    cat /etc/passwd | grep "/bin/bash" | grep "home" | cut -d: -f1 > lista_users


    if [[ "${usuario}" != 'root' ]]; then
        arquivo_zshrc="/home/${usuario}/.zshrc"
    fi
 
    rm -rfv lista_users
        
    echo -e "${separa}\nFazendo backup do .zshrc do usuário ${usuario}..."
    cp -v "${arquivo_zshrc}" "${arquivo_zshrc}"-bkp
    echo -e "${separa}\nAlterando o tema para agnoster..."
    sed -i 's/ZSH_THEME=\"robbyrussell/ZSH_THEME=\"agnoster/'g "${arquivo_zshrc}"


    echo "${msg_final}"
    exit 0
}


#------------------------------------------------------------------------------>


#------TESTES------------------------------------------------------------------>


# Verifica se o script já foi testado na distro atual
for d in "${distros[@]}"; do                     
    if [[ "${d}" == ${distro} ]]; then
        continua=1
    fi
done

[[ $continua -eq 0 ]] && { echo -e "Este script ainda não foi testado com ${distro}."; exit 1;} 


#------------------------------------------------------------------------------>

# Programa começa aqui :)
pergunta

